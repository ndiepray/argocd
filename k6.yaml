apiVersion: v1
kind: Service            ### nginx에 대한 서비스 생성
metadata:
  name: nginx-service            
spec:
  type: LoadBalancer            ### 외부에서 접속 가능하게 하기 위해 LoadBalancer 타입으로 설정
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment            ### Deployment 컨트롤러를 사용하여 부하테스트를 위한 web 서버 생성
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service            ### influxdb에 대한 서비스 생성
metadata:
  name: influxdb-service        
spec:
  type: ClusterIP
  ports:
    - port: 8086
      protocol: TCP
  selector:
    app: influxdb
---
apiVersion: v1
kind: Pod            ### 부하테스트에 대한 데이터를 저장하기 위한 influxdb 파드 생성
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  containers:
  - name: influxdb
    image: influxdb
    env:
      - name: INFLUXDB_DB
        value: k6
    ports:
      - name: web
        containerPort: 8086
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service            ### grafana에 대한 서비스 생성
spec:
  type: LoadBalancer            ### LoadBalancer를 통해 외부에서 접속 가능    
  ports:
    - port: 3000
      protocol: TCP
  selector:
    app: grafana
---
apiVersion: v1
kind: ConfigMap        ### influxdb에 데이터를 저장하기 위해 사용하는 오브젝트인 configmap 생성
metadata:
    name: datasource-config
data:
  grafana-datasource.yaml: |
    apiVersion: 1
    datasources:            ### 데이터 소스로 influxdb를 사용
      - name: k6influxdb
        type: influxdb
        access: proxy
        database: k6
        url: http://influxdb-service:8086
        isDefault: true
---
apiVersion: v1
kind: Pod            ### influxdb에 저장한 데이터를 시각화해주는 grafana 파드 생성
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  containers:
  - name: grafana
    image: grafana/grafana:latest
    env:
      - name: GF_AUTH_ANONYMOUS_ORG_ROLE
        value: Admin
      - name: GF_AUTH_ANONYMOUS_ENABLED
        value: "true"
      - name: GF_AUTH_BASIC_ENABLED
        value: "false"
    ports:
      - name: web
        containerPort: 3000
    volumeMounts:
        - name: datasource-vol
          mountPath: /etc/grafana/provisioning/datasources/
          readOnly: true
  volumes:
    - name: datasource-vol
      configMap:
        name: datasource-config
        items:
          - key: "grafana-datasource.yaml"
            path: "datasource.yaml"
---
apiVersion: v1
kind: ConfigMap            ### 부하테스트를 위한 스크립트를 실행하는 오브젝트인 configmap 생성
metadata:
  name: k6-scripts
data:            ### web 서버에 HTTP 접속 요청을 하고 응답에 대한 성능 측정해주는 코드 작성
  nginx-test.js: |
    import {check, sleep, group} from "k6";
    import http from "k6/http";
    export let options = {
        vus: 100,
        duration: '30s',
        batchPerHost: 5,
        insecureSkipTLSVerify: true,
        thresholds: {
          'http_req_duration{kind:html}': ['avg<=250', 'p(95)<500'],
        }
    };
    export default function () {
        group("static", function () {
            check(http.get(`http://${__ENV.TARGET_HOSTNAME}:80`, {
                tags: {'kind': 'html'},
            }), {
                "status is 200": (res) => res.status === 200,
            });
        });
        sleep(1);
    }
---
apiVersion: batch/v1beta1
kind: CronJob            ### 일정 시간마다 부하를 진행하기 위해 CronJob 생성 
metadata:
  name: k6-nginx-test
spec:
  schedule: "*/1 * * * *"        ### 1분마다 nginx web 서버에 접근하는 부하 생성
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: k6
              image: loadimpact/k6:latest
              env:
                - name: K6_OUT
                  value: influxdb=http://influxdb-service:8086/k6
                - name: TARGET_HOSTNAME
                  value: nginx-service.default.svc.cluster.local
              args:
                - run
                - /scripts/nginx-test.js
              volumeMounts:
                - name: scripts-vol
                  mountPath: /scripts
          restartPolicy: Never
          volumes:
            - name: scripts-vol
              configMap:
                name: k6-scripts
