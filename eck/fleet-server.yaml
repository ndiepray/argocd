apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: demo-fleet-server
  namespace: eck
spec:
  version: 8.3.3
  kibanaRef:
    name: demo
  elasticsearchRefs:
  - name: demo
  mode: fleet
  fleetServerEnabled: true
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
<<<<<<< HEAD
  #namespace: eck
=======
>>>>>>> 68ebeef271a140a8bc9f463fe4e9c0cde0c3fd02
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: eck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
  #namespace: eck
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: eck
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io
